apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: deepseek-eval-
  labels:
    workflows.argoproj.io/archive-strategy: "false"
spec:
  # 工作流参数，对应Airflow的params
  arguments:
    parameters:
    - name: job_name
      value: "eval-test"
    - name: project_name
      value: "deepseek_v2_lite"
    - name: model_input
      value: ""
    - name: task_input
      value: '["a", "b"]'  # JSON字符串格式的数组

  # 入口点，使用DAG模板
  entrypoint: deepseek-eval-dag

  # 模板定义
  templates:
  # DAG模板定义工作流的依赖关系
  - name: deepseek-eval-dag
    dag:
      tasks:
      # 模型转换任务
      - name: convert-task
        template: convert-deepseek-to-hf
        arguments:
          parameters:
          - name: job_name
            value: "{{workflow.parameters.job_name}}"
          - name: model_input
            value: "{{workflow.parameters.model_input}}"

      # 评估任务 - 这里我们创建两个并行的评估任务作为示例
      # 在实际使用中，你可能需要根据task_input参数动态创建
      - name: eval-task-0
        template: llm-eval-harness
        arguments:
          parameters:
          - name: job_name
            value: "{{workflow.parameters.job_name}}"
          - name: project_name
            value: "{{workflow.parameters.project_name}}"
          - name: model_input
            value: "{{workflow.parameters.model_input}}"
          - name: task_index
            value: "0"
        dependencies: [convert-task]

      - name: eval-task-1
        template: llm-eval-harness
        arguments:
          parameters:
          - name: job_name
            value: "{{workflow.parameters.job_name}}"
          - name: project_name
            value: "{{workflow.parameters.project_name}}"
          - name: model_input
            value: "{{workflow.parameters.model_input}}"
          - name: task_index
            value: "1"
        dependencies: [convert-task]

  # 模型转换模板
  - name: convert-deepseek-to-hf
    inputs:
      parameters:
      - name: job_name
      - name: model_input
    container:
      image: hub.anuttacon.com/nvcr.io/nvidia/nemo:25.02.rc5
      command: [bash]
      args:
      - "/mnt/project/llm/users/xug/code/trial/Ocean/users/xuguang/evaluation/airflow_pipeline/airflow_deepseek_convert.sh"
      - "{{inputs.parameters.model_input}}"
      - "{{inputs.parameters.job_name}}"
      
      # 环境变量
      env:
      - name: MLP_CLUSTER
        value: "il2"
      - name: MLP_PROJECT
        value: "llm"
      - name: MLP_USER
        value: "xuguang.zhao"
      - name: NCCL_DEBUG
        value: "WARN"
      - name: NCCL_SOCKET_IFNAME
        value: "eth0"
      - name: NCCL_IB_QPS_PER_CONNECTION
        value: "4"
      - name: TORCH_CPP_LOG_LEVEL
        value: "INFO"
      - name: TORCH_DISTRIBUTED_DEBUG
        value: "INFO"
      - name: RAY_COLOR_PREFIX
        value: "0"
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: MASTER_PORT
        value: "23456"
      - name: PET_MASTER_PORT
        value: "23456"
      - name: MASTER_ADDR
        value: "localhost"
      - name: PET_MASTER_ADDR
        value: "localhost"
      - name: RANK
        value: "0"
      - name: NODE_RANK
        value: "0"
      - name: PET_NODE_RANK
        value: "0"
      - name: PET_NNODES
        value: "1"

      # 资源限制
      resources:
        limits:
          cpu: "53200m"
          memory: "498073Mi"
        requests:
          cpu: "50400m"
          memory: "71859Mi"

      # 卷挂载
      volumeMounts:
      - name: host-path-share
        mountPath: /mnt/share
      - name: host-path-project
        mountPath: /mnt/project
      - name: host-path-personal
        mountPath: /mnt/personal
      - name: git-volume
        mountPath: /opt/scripts

    # 卷定义
    volumes:
    - name: host-path-share
      hostPath:
        path: /mnt/xstorage/share
        type: Directory
    - name: host-path-project
      hostPath:
        path: /mnt/xstorage/project/project-llm
        type: Directory
    - name: host-path-personal
      hostPath:
        path: /mnt/xstorage/personal/xuguang.zhao
        type: Directory
    - name: git-volume
      emptyDir: {}

  # 评估任务模板
  - name: llm-eval-harness
    inputs:
      parameters:
      - name: job_name
      - name: project_name
      - name: model_input
      - name: task_index
    container:
      image: hub.anuttacon.com/docker.io/vllm/vllm-openai:v0.6.4
      command: [bash]
      args:
      - "/mnt/project/llm/users/xug/code/trial/Ocean/users/xuguang/evaluation/airflow_pipeline/airflow_llm_evaluation_harness.sh"
      - "{{inputs.parameters.model_input}}/hf"
      - "{{inputs.parameters.project_name}}"
      - "{{inputs.parameters.job_name}}"
      - "task_{{inputs.parameters.task_index}}"  # 这里简化了任务索引，你可以根据需要调整

      # 环境变量（与convert任务相同）
      env:
      - name: MLP_CLUSTER
        value: "il2"
      - name: MLP_PROJECT
        value: "llm"
      - name: MLP_USER
        value: "xuguang.zhao"
      - name: NCCL_DEBUG
        value: "WARN"
      - name: NCCL_SOCKET_IFNAME
        value: "eth0"
      - name: NCCL_IB_QPS_PER_CONNECTION
        value: "4"
      - name: TORCH_CPP_LOG_LEVEL
        value: "INFO"
      - name: TORCH_DISTRIBUTED_DEBUG
        value: "INFO"
      - name: RAY_COLOR_PREFIX
        value: "0"
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: MASTER_PORT
        value: "23456"
      - name: PET_MASTER_PORT
        value: "23456"
      - name: MASTER_ADDR
        value: "localhost"
      - name: PET_MASTER_ADDR
        value: "localhost"
      - name: RANK
        value: "0"
      - name: NODE_RANK
        value: "0"
      - name: PET_NODE_RANK
        value: "0"
      - name: PET_NNODES
        value: "1"

      # 资源限制
      resources:
        limits:
          cpu: "53200m"
          memory: "498073Mi"
        requests:
          cpu: "50400m"
          memory: "71859Mi"

      # 卷挂载
      volumeMounts:
      - name: host-path-share
        mountPath: /mnt/share
      - name: host-path-project
        mountPath: /mnt/project
      - name: host-path-personal
        mountPath: /mnt/personal
      - name: git-volume
        mountPath: /opt/scripts

    # 卷定义
    volumes:
    - name: host-path-share
      hostPath:
        path: /mnt/xstorage/share
        type: Directory
    - name: host-path-project
      hostPath:
        path: /mnt/xstorage/project/project-llm
        type: Directory
    - name: host-path-personal
      hostPath:
        path: /mnt/xstorage/personal/xuguang.zhao
        type: Directory
    - name: git-volume
      emptyDir: {} 